services:
  server:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_VERSION: 22.14.0
    container_name: rest-api-server
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb://mongo:27017/restapi
      - REDIS_DEV_URL=redis://redis:6379
    ports:
      - "5000:5000"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    develop:
      watch:
        - path: .
          action: restart
        - path: package.json
          action: rebuild

  mongo:
    image: mongo:latest
    container_name: rest-api-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=restapi
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:alpine
    container_name: rest-api-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  mongo-express:
    image: mongo-express:latest
    container_name: rest-api-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_BASICAUTH_ENABLED: "false"
      ME_CONFIG_MONGODB_URL: "mongodb://mongo:27017"
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
  redis-data:
